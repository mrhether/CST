<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>coffees = 0;
moving = false;

workTimer = -1;

setGrid();

ppath = -100;
showGrid = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moving = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (coffees == 0) {

    var coffeeMachine = instance_nearest(x,y,obj_coffeeMachine);
    var i = 1
    if (moving == false) {
        repeat (instance_number(obj_coffeeMachine)) {
        if (coffeeMachine.coffeeCount &gt; 0) break;
            i = i + 1;
            coffeeMachine = instance_nearest_nth(x,y,obj_coffeeMachine,i);
        }
        setGrid();
        moveToPoint(x,y,coffeeMachine.x,coffeeMachine.y,1+random(2));
        moving = true;
        alarm[0] = 400;
    }
    
    if (distance_to_object(coffeeMachine) &lt;= 5 and coffeeMachine.coffeeCount &gt; 0) {
        moving = false;
        var take = min(coffeeMachine.coffeeCount, 3);
        with coffeeMachine {
            coffeeCount -= take;
        }
        coffees += take;
        var textObj =  instance_create(x,y,obj_text);
        textObj.text = "- " + string(costFormula(global.waterTemp,global.brewTime,global.coffeeAmount) * take);
        textObj.color = c_red;
        global.money -= costFormula(global.waterTemp,global.brewTime,global.coffeeAmount) * take;
    }
    
} else {

    var inst = instance_nearest(x,y,obj_cashier);
    if (moving == false) {
        setGrid();
        moveToPoint(x,y,inst.x,inst.y,1+random(2));
        moving = true;
        alarm[0] = 400;
    }
    
    if (distance_to_object(inst) &lt;= 5) {
        if (workTimer == -1) {
            workTimer = 100;
        } else if (workTimer == 0) {
            moving = false;
            with inst {
                for (var i = 0; i &lt; other.coffees; i++) {
                    event_user(1);
                }
            }
            coffees = 0;
            workTimer = -1;
        } else {
            workTimer -= 1;
        }

    }
}

if (collision_circle(x,y,14,obj_worker,false,true)) {
    var near = instance_nearest(x,y,obj_worker)
    var xx=path_get_point_x(path_index,1);
    var yy=path_get_point_y(path_index,1);
    if (near.path_speed == 1) {
        path_speed = 0.5;
    }
} else {
    path_speed = 1;
    if (path_index == -1) {
        moving = false;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_path(path,0,0,true);
if (workTimer &gt; 0) {
    draw_rectangle(x-16,y-22,x-16+workTimer/100*32,y-18,false);
}

if (showGrid) {
    mp_grid_draw(grid);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>showGrid = not showGrid;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
