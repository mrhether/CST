<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//view_angle[0] = 45;
//view_hview[0] = view_hview[0] + view_hview[0]
global.heightMod = 1;
global.rotation = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
    Zooming In/Out
*/

/* Using the Mouse Wheel */
//Zoom In
if mouse_wheel_up() &amp;&amp; view_wview[0] &gt; 512{
    view_wview[0] *= .9;
    view_hview[0] *= .9;
}
//Zoom Out
if mouse_wheel_down() &amp;&amp; view_wview[0] &lt; window_get_width() + 3512{
    view_wview[0] *= 1.1;
    view_hview[0] *= 1.1;
}
//Return to regular zoom
if mouse_check_button(3) {
    view_wview[0] = window_get_width();
    view_hview[0] = window_get_height();
}

var up = ord('W');
var down = ord('S');
var left = ord('A');
var right = ord('D');
var scrollSpeed = 10;

if keyboard_check(up) {
    view_yview[0] -= scrollSpeed;
}
if keyboard_check(down) {
    view_yview[0] += scrollSpeed;
}
if keyboard_check(left) {
    view_xview[0] -= scrollSpeed;
}
if keyboard_check(right) {
    view_xview[0] += scrollSpeed;
}

if (keyboard_check(vk_left)) {
    view_angle[0] -= 2;
}
if (keyboard_check(vk_right)) {
    view_angle[0] += 2;
}

rotation = global.rotation;
height = global.heightMod;

if (keyboard_check(vk_left)) {
    rotation +=2;
}
if (keyboard_check(vk_right)) {
    rotation -= 2;
}
if (rotation &lt; 0) rotation += 360
rotation = rotation mod 360

if (keyboard_check(vk_down)) {
    height -= 0.1;
}
if (keyboard_check(vk_up)) {
    height += 0.1;
}
height = max(height,0)
height = min(height,1)

global.rotation = rotation;
global.heightMod = height;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
