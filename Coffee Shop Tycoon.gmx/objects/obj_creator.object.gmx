<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>wall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canCreate = true
empty = true;
pressed = false;
team = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>setCreationItem(objFloor,sprite0,"Building",10)
setCreationItem(objDoor,door,"Entrance",25)
setCreationItem(obj_cashier_team,spr_cashier,"Cash Register",50)
setCreationItem(obj_coffeeMachine_team,spr_coffeemaker,"Coffee Maker",50)
setCreationItem(obj_worker_team,spr_customer1,"Worker",50)
setCreationItem(obj_table,spr_table,"Table",30)
currentCreation = 0;

xPos = round(mouse_x/64)*64;
yPos = round(mouse_y/64)*64;
zPos=1
angle = 0;
currentImage = creationImage[currentCreation];

offset = -64
finalOffset = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canCreate = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentImage = creationImage[currentCreation];
snap = 64
xPos = round(mouse_x/snap)*snap;
yPos = round(mouse_y/snap)*snap;
angle = 0
if (currentCreation == 1) {
    nearestWall = instance_nearest(mouse_x, mouse_y, objWall)
    xPos = nearestWall.x;
    yPos = nearestWall.y;
    angle = nearestWall.image_angle;
}
if (currentCreation == 3) {
    nearestWall = instance_nearest(mouse_x, mouse_y, objWall)
    //xPos = nearestWall.x;
    //yPos = nearestWall.y;
    
    numbers[0] = 0;
    numbers[1] = 90;
    numbers[2] = 180;
    numbers[3] = 270;
    numbers[4] = 360;
    
    dir = point_direction(mouse_x,mouse_y,nearestWall.x,nearestWall.y);
    dir = dir mod 360
    distance = abs(numbers[0] - dir);
    var idx = 0;
    for(var c = 1; c &lt; 5; c++){
        var cdistance = abs(numbers[c] - dir);
        if(cdistance &lt; distance){
            idx = c;
            distance = cdistance;
        }
    }
    angle = numbers[idx]-90
}

if (offset &lt; finalOffset) {
    offset += max(1,abs(offset - finalOffset)/10);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with objFloor {
    position_destroy(mouse_x,mouse_y)
}
//instance_create(mouse_x,mouse_y,objFloor);
with wallManager {
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not instance_position(xPos,yPos,creations[currentCreation]) &amp;&amp; canCreate = true &amp;&amp; pressed = true {
    var inst = instance_create(xPos,yPos,creations[currentCreation]);
    inst.image_angle = angle;
    
    var textObj =  instance_create(mouse_x,mouse_y,obj_text);
    textObj.text = "-$" + string(creationCost[currentCreation]);
    textObj.color = c_red;
    vm = getTObject(obj_variableManager);
    vm.money -= creationCost[currentCreation];
       
    with wallManager {
        event_user(0);
    }
}
pressed = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pressed = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var imageSize = 64
var length = array_length_1d(creations);
var start = view_hview[0]-1;

draw_set_alpha(.65)
draw_rectangle_color(
        imageSize*length*0 + offset,start - imageSize*0,imageSize*(length) + offset,start - imageSize*(1),
        c_black,c_black,c_black,c_black,false);


for (var i = 0; i &lt; length; i++) {

    xx = imageSize*i*1 + offset
    yy = start - imageSize*0;
    xx2 = imageSize*(i+1) + offset
    yy2 = start - imageSize*(1)
    if (i mod 2) c = 0 else c=0.5
    if (c &gt; 0) {
        draw_set_alpha(c)
        draw_rectangle_color(
            xx,yy,xx2,yy2,
            c_black,c_black,c_black,c_black,false);
    }
    draw_set_alpha(1)
    if (currentCreation == i) {
        draw_rectangle_color(
            xx,yy,xx2,yy2,
            c_black,c_black,c_black,c_black,true);
    }
    draw_sprite_ext(
        creationImage[i],0,imageSize*(i+0.5)+ offset,start - imageSize/2,
        0.75,0.75,0,c_white,1);
        
    //If you hover over the text, make it brighter
    if( mouse_rectangle(xx,yy2,xx2,yy) )
    {
        draw_rectangle_color(
            xx,yy,xx2,yy2,
            c_white,c_white,c_white,c_white,true);
        draw_set_valign(fa_middle);
        draw_set_halign(fa_middle);
        draw_text((xx2+xx)/2,yy - imageSize,creationText[i] + " $" + string(creationCost[i]));
        canCreate = false;
        alarm[2] = 3;
    }
    
    //If you click the text, go to its target 
    if( mouse_click_rectangle(xx,yy2,xx2,yy) )
    {
        currentCreation = i;
        canCreate = false;
        alarm[2] = 3;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(0.6)
draw_ellipse_color(xPos-16,yPos-16,xPos+16,yPos+16,c_white,c_white,false);
draw_set_alpha(1)
draw_sprite_ext(currentImage,0,xPos,yPos,1,1,angle,c_white,0.3);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_ellipse_color(xPos-16,yPos-16,xPos+16,yPos+16,c_white,c_white,false);
//draw_sprite_ext(currentImage,0,xPos,yPos,1,1,angle,c_white,0.3);

//var d = instance_nearest(mouse_x,mouse_y,objWall)
//draw_line(mouse_x,mouse_y,d.x,d.y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentCreation = (currentCreation+1) mod array_length_1d(creations);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
